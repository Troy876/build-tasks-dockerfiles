apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: e2e-tests-pipeline
spec:
  params:
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      default: ''
      type: string
    - name: e2e_test_namespace
      default: "build-templates-e2e"
      description: "namespace where e2e-tests will be executed"
  tasks:
    - name: test-metadata
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: test-name
          value: $(context.pipelineRun.name)
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/test-metadata/0.1/test-metadata.yaml
    - name: prepare-e2e-tests
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
      when:
        - input: "$(tasks.test-metadata.results.test-event-type)"
          operator: in
          values: ["pull_request"]
      taskSpec:
        params:
        - name: SNAPSHOT
        results:
          - name: custom-build-bundle
            description: "custom bundle for source build pipeline"
        steps:
          - name: e2e-tests
            image: quay.io/konflux-ci/appstudio-utils:1df9af1160526ef9d75cd26809a8ee2ef7c37750@sha256:b923beb77ac0ede219bcacadeeeebba87d78684c11f9b56f9fc75225ded5550e
            env:
            - name: SNAPSHOT
              value: $(params.SNAPSHOT)
            script: |
              set -e
              echo "SNAPSHOT: ${SNAPSHOT}"
              export SOURCE_BUILD_IMAGE=$(jq -r '.components[] | select(.name == "source-container-build") | .containerImage' <<< "$SNAPSHOT")
              git clone --branch main https://github.com/konflux-ci/e2e-tests.git
              cd e2e-tests/
              if [[ "${SOURCE_BUILD_IMAGE}" != "" ]]; then
                echo "Setup pipeline bundle replacing source build image"
                make setup-only-source-build | tee cmd_output
              else
                echo "[Error] Unknown scenario, execution of e2e-tests is not needed"
                exit 1
              fi
              last_line_output=$(tail -n 1 cmd_output)
              IFS='='
              read -ra arr <<< "$last_line_output"
              custom_pipeline_bundle=${arr[1]}
              if [[ "$custom_pipeline_bundle" == "" ]]; then
                echo "Failed to read pipeline bundle, exiting..."
                exit 1
              fi
              echo -n ${custom_pipeline_bundle} | tee $(results.custom-build-bundle.path)

    - name: run-e2e-tests
      params:
        - name: e2e_test_namespace
          value: "$(params.e2e_test_namespace)"
        - name: app_suffix
          value: "build-tasks-dockerfiles"
        - name: ec_pipelines_repo_url
          value: "https://github.com/konflux-ci/build-definitions.git"
        - name: ec_pipelines_repo_revision
          value: "main"
        - name: custom_build_bundle
          value: "$(tasks.prepare-e2e-tests.results.custom-build-bundle)"
      when:
        - input: "$(tasks.test-metadata.results.test-event-type)"
          operator: in
          values: ["pull_request"]
      runAfter:
        - prepare-e2e-tests
      taskRef:
        resolver: git
        params:
          - name: url
            value: "https://github.com/konflux-ci/build-tasks-dockerfiles.git"
          - name: revision
            value: "main"
          - name: pathInRepo
            value: integration-tests/tasks/e2e-test.yaml
      timeout: "2h"
